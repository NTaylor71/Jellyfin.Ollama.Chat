# =============================================================================
# HeidelTime Provider Service - Java-based temporal processing
# =============================================================================

# =============================================================================
# STAGE 1: BUILDER - Install dependencies and build tools
# =============================================================================
FROM python:3.12-slim AS builder

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DEBIAN_FRONTEND=noninteractive

# Install build dependencies including Java JDK
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    openjdk-17-jdk \
    && rm -rf /var/lib/apt/lists/*

# Set Java environment for building
ENV JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
ENV PATH=$JAVA_HOME/bin:$PATH

# Create app directory
WORKDIR /app

# Copy project files
COPY pyproject.toml ./
COPY src/ ./src/

# Install Python dependencies to /opt/venv
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -e .[heideltime,api,monitoring]

# =============================================================================
# STAGE 2: RUNTIME - Copy only necessary files from builder
# =============================================================================
FROM python:3.12-slim AS runtime

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DEBIAN_FRONTEND=noninteractive

# Install runtime dependencies (JRE, not JDK)
RUN apt-get update && apt-get install -y \
    curl \
    openjdk-17-jre-headless \
    && rm -rf /var/lib/apt/lists/*

# Set Java environment for runtime
ENV JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
ENV PATH=$JAVA_HOME/bin:$PATH

# Create app directory
WORKDIR /app

# Copy Python virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy project files from builder
COPY --from=builder /app/src ./src
COPY --from=builder /app/pyproject.toml ./

# Create directories
RUN mkdir -p logs

# Create non-root user
RUN groupadd -g 1000 heideltime && \
    useradd -u 1000 -g 1000 -m heideltime && \
    chown -R heideltime:heideltime /app && \
    chown -R heideltime:heideltime /opt/venv

# Environment variables
ENV PYTHONPATH=/app

# Expose port
EXPOSE 8008

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8008/health/ready || exit 1

# Switch to non-root user
USER heideltime

# Run HeidelTime service
CMD ["python", "-m", "src.services.provider_services.heideltime_service"]